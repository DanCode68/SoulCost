<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDIAAAEAGADYHQAAFgAAACgAAAAwAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEAAAAA
        AAAAAAAAAAAAAAAAAAABAQECAgEBAQEBAQECAgIEBAQCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABAQEAAAABAAAAAAABAQECAgIGBgYJCQgKCgoLCgoPDg4TEhEjISEeHBsYFxYWFBMN
        DAwFBAQBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMPDg0eHBwuLCs/
        PDtRTk5aV1Z1cnF8eXlgXVtFQUAuKiklISATEhEIBwcDAgIBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAgEEBAQLCgokIiFdWliEgH6UkI/GxMTPzs7Rz8/R0NDGxMTIxsWGgoBWUlAxLSwUEhEJCAgE
        BAQCAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEIBwcNDAwfHRxgXFuxrqzGwsHc2djq6enz8vLy8vHt
        7Ozt6+vk4uHU0tG2s7OGgoFAPTwcGhkMCwsGBQUBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIEAwMKCQkWFRVF
        QUC6t7be3Nvo5+bx8PD29vX39/bz8/Lz8vLy8fHy8fH18/Pc2tqcmJdQTEslIiEfHRwSERAJCQgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABAQEFBQUVFBRGQ0J6dnXZ19bw7+/29fX5+Pj6+fr4+Pj39/f6+vr4+Pj08vLy8fHr
        6enPzcyalpVmYmAsKSgcGhkREBAMCwsEBAQCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIHBgYYFhZDPz6zsK/w7+729vX7+/r9
        /f38/Pz6+vr7+/v8/Pz4+Pj29fX49/f19PT08/Pm5eWdmphXU1IqKCceHBweHh0LCwoDAwMBAQEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
        AwMMCwsnJSRgXVvZ2Nfv7e339vb7+/v7+/v7+/v8/Pz8/Pz8/Pz7+/v39/f39/f4+Pj19PTy8fG3tLN8
        eXhMSkkQDw8aGRkREREEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAgINDAwnJSRfXFvd29rx8PD39vb5+Pj08/P4+Pj8/Pz8/Pz8
        /Pz8/Pz29vb29vb6+vr39/fy8PC/vLuJhoRfXFsnJSQVFBMODg4NDQ0KCgoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAgINDAwuLCuAfXz1
        9PT39vbz8vHy8fH19fX29vb7+/v7+/v8/Pz8/Pz4+Pj29vb4+Pj9/f34+PjY1dSvq6p7d3Y7ODcQEA8H
        BwcKCgoEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAEAwMPDg0wLSyioJ/09PP29fXt7Ozx8PD19fX4+Pj7+/v6+vr8/Pz8/Pz7+/v6+vr6
        +vr6+vrk4+PS0NDKx8aloaBkYWAhICARERENDQ0CAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYQDw9JR0e+vLvx8fD39vbx8PD09PT3
        9/f8/Pz7+/v7+/v7+/v8/Pz7+/v5+fny8vLq6ene3d3n5uXf3d3FwsJ9enkzMjIZGRkPDw8ICAgBAQEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEH
        BgYYFxZ9enmWlJPu7u3t7e3w7+7z8/P4+Pj8/Pz7+/v7+/v7+/v7+/v8/Pz6+vr29vbt7e3q6ent7Ozm
        5eXDwL+Ih4ZFREQlJSUTExMKCgoEBAQCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQIBwcfHR1MSUlxbm3Z2Nfo6Ofl5OTq6unx8PDz8/P6+vr6+vr6
        +vr9/f39/f38/Pz39/fw8PDw8PDu7e3n5+bCwcCEg4MzMjIlJSUZGRkNDQ0MDAwFBQUBAQEBAQEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEDAgIPDg4UExM1MzNOS0qX
        lZXPzs7e3d3g39/h4eHj4+P19fX39/f6+vr8/Pz+/v7////6+vrx8PDt7e3k5OTl5eXCwsKAf39BQUE3
        NzcnJycODg4NDQ0ICAgEBAQBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAwMQDw4jISAXFRUWFBQ6ODdsaWmwra3c2trj4uLU09PT09Pl5eXy8vL4+Pj7+/v9/f39/f39
        /f34+Pjt7OzY19fl5eXDwsKGhoZoaGhPT082NjYREREHBwcLCwsMDAwCAgIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEJCQhOTEq2tbW0s7NTUlEeHRxMSUmDgYDHxcTKysqV
        lZSxsbHV1dXl5eXt7e339/f6+vr+/v7+/f79/f308/Pb2trj4+PEw8Oen56CgoKOjo5dXV0iIiINDQ0J
        CQkQEBAKCgoCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIZGBeYlpXz
        8/Px8O/R0dFLSkkiICBRT06Ylpabm5uTkpJdXV2Li4vPz8/r6+v09PT19fX5+fn8/Pz8/Pz8/Pvz8vLj
        4+PEw8OioqKsrKywsLCSkZFSUlIVFRUGBgYIBwcJCQkFBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwNAPz7e3d35+fn19fXo6OiLi4scGxtHRkZUU1N9fXyfn5+UlJROTk6mpqbg
        4ODu7u7s7Oze3t7s7Oz39/f7+/r5+Pfy8fHS0dGMi4tsbGusrKx+fn42NTYnJycGBgYCAgIJCQkEBAQA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>